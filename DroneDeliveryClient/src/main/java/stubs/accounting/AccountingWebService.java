package stubs.accounting;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.7.9
 * 2020-03-17T08:51:20.741+01:00
 * Generated source version: 2.7.9
 * 
 */
@WebService(targetNamespace = "http://www.polytech.unice.fr/si/4a/isa/dd/team-h/accounting", name = "AccountingWebService")
@XmlSeeAlso({ObjectFactory.class})
public interface AccountingWebService {

    @WebMethod
    @RequestWrapper(localName = "findInvoicesForSupplier", targetNamespace = "http://www.polytech.unice.fr/si/4a/isa/dd/team-h/accounting", className = "stubs.accounting.FindInvoicesForSupplier")
    @ResponseWrapper(localName = "findInvoicesForSupplierResponse", targetNamespace = "http://www.polytech.unice.fr/si/4a/isa/dd/team-h/accounting", className = "stubs.accounting.FindInvoicesForSupplierResponse")
    @WebResult(name = "invoice_list", targetNamespace = "")
    public java.util.List<stubs.accounting.Invoice> findInvoicesForSupplier(
        @WebParam(name = "supplier", targetNamespace = "")
        stubs.accounting.Supplier supplier
    ) throws UnknownSupplierException_Exception;

    @WebMethod
    @RequestWrapper(localName = "generateInvoicesForAllSuppliers", targetNamespace = "http://www.polytech.unice.fr/si/4a/isa/dd/team-h/accounting", className = "stubs.accounting.GenerateInvoicesForAllSuppliers")
    @ResponseWrapper(localName = "generateInvoicesForAllSuppliersResponse", targetNamespace = "http://www.polytech.unice.fr/si/4a/isa/dd/team-h/accounting", className = "stubs.accounting.GenerateInvoicesForAllSuppliersResponse")
    public void generateInvoicesForAllSuppliers();

    @WebMethod
    @RequestWrapper(localName = "register", targetNamespace = "http://www.polytech.unice.fr/si/4a/isa/dd/team-h/accounting", className = "stubs.accounting.Register")
    @ResponseWrapper(localName = "registerResponse", targetNamespace = "http://www.polytech.unice.fr/si/4a/isa/dd/team-h/accounting", className = "stubs.accounting.RegisterResponse")
    public void register(
        @WebParam(name = "name", targetNamespace = "")
        java.lang.String name,
        @WebParam(name = "contact", targetNamespace = "")
        java.lang.String contact
    ) throws AlreadyExistingSupplierException_Exception;

    @WebMethod
    @RequestWrapper(localName = "generateInvoiceFor", targetNamespace = "http://www.polytech.unice.fr/si/4a/isa/dd/team-h/accounting", className = "stubs.accounting.GenerateInvoiceFor")
    @ResponseWrapper(localName = "generateInvoiceForResponse", targetNamespace = "http://www.polytech.unice.fr/si/4a/isa/dd/team-h/accounting", className = "stubs.accounting.GenerateInvoiceForResponse")
    public void generateInvoiceFor(
        @WebParam(name = "supplier", targetNamespace = "")
        stubs.accounting.Supplier supplier
    ) throws UnknownSupplierException_Exception;

    @WebMethod
    @RequestWrapper(localName = "findAllUnpaidInvoices", targetNamespace = "http://www.polytech.unice.fr/si/4a/isa/dd/team-h/accounting", className = "stubs.accounting.FindAllUnpaidInvoices")
    @ResponseWrapper(localName = "findAllUnpaidInvoicesResponse", targetNamespace = "http://www.polytech.unice.fr/si/4a/isa/dd/team-h/accounting", className = "stubs.accounting.FindAllUnpaidInvoicesResponse")
    @WebResult(name = "unpaid_list", targetNamespace = "")
    public java.util.List<stubs.accounting.Invoice> findAllUnpaidInvoices();

    @WebMethod
    @RequestWrapper(localName = "findByName", targetNamespace = "http://www.polytech.unice.fr/si/4a/isa/dd/team-h/accounting", className = "stubs.accounting.FindByName")
    @ResponseWrapper(localName = "findByNameResponse", targetNamespace = "http://www.polytech.unice.fr/si/4a/isa/dd/team-h/accounting", className = "stubs.accounting.FindByNameResponse")
    @WebResult(name = "supplier", targetNamespace = "")
    public stubs.accounting.Supplier findByName(
        @WebParam(name = "name", targetNamespace = "")
        java.lang.String name
    ) throws UnknownSupplierException_Exception;
}
