<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions name="AccountingWebServiceImplService" targetNamespace="http://www.polytech.unice.fr/si/4a/isa/dd/team-h/accounting" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.polytech.unice.fr/si/4a/isa/dd/team-h/accounting" xmlns:ns2="http://www.polytech.unice.fr/si/4a/isa/dd/team-h/drones" xmlns:ns1="http://www.polytech.unice.fr/si/4a/isa/dd/team-h/packages" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
<xs:schema xmlns:tns="http://www.polytech.unice.fr/si/4a/isa/dd/team-h/accounting" xmlns:xs="http://www.w3.org/2001/XMLSchema" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://www.polytech.unice.fr/si/4a/isa/dd/team-h/accounting">
  <xs:element name="addSupplierContact" type="tns:addSupplierContact"/>
  <xs:element name="addSupplierContactResponse" type="tns:addSupplierContactResponse"/>
  <xs:element name="deleteSupplier" type="tns:deleteSupplier"/>
  <xs:element name="deleteSupplierResponse" type="tns:deleteSupplierResponse"/>
  <xs:element name="findAllSuppliers" type="tns:findAllSuppliers"/>
  <xs:element name="findAllSuppliersResponse" type="tns:findAllSuppliersResponse"/>
  <xs:element name="findAllUnpaidInvoices" type="tns:findAllUnpaidInvoices"/>
  <xs:element name="findAllUnpaidInvoicesResponse" type="tns:findAllUnpaidInvoicesResponse"/>
  <xs:element name="findInvoicesForSupplier" type="tns:findInvoicesForSupplier"/>
  <xs:element name="findInvoicesForSupplierResponse" type="tns:findInvoicesForSupplierResponse"/>
  <xs:element name="findSupplierByName" type="tns:findSupplierByName"/>
  <xs:element name="findSupplierByNameResponse" type="tns:findSupplierByNameResponse"/>
  <xs:element name="generateInvoiceFor" type="tns:generateInvoiceFor"/>
  <xs:element name="generateInvoiceForResponse" type="tns:generateInvoiceForResponse"/>
  <xs:element name="generateInvoicesForAllSuppliers" type="tns:generateInvoicesForAllSuppliers"/>
  <xs:element name="generateInvoicesForAllSuppliersResponse" type="tns:generateInvoicesForAllSuppliersResponse"/>
  <xs:element name="registerSupplier" type="tns:registerSupplier"/>
  <xs:element name="registerSupplierResponse" type="tns:registerSupplierResponse"/>
  <xs:complexType name="findInvoicesForSupplier">
    <xs:sequence>
      <xs:element minOccurs="0" name="supplier" type="tns:supplier"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="supplier">
    <xs:sequence>
      <xs:element minOccurs="0" name="name" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="findInvoicesForSupplierResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="invoice_list" type="tns:invoice"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="invoice">
    <xs:sequence>
      <xs:element name="amount" type="xs:float"/>
      <xs:element minOccurs="0" name="creationDate" type="tns:localDate"/>
      <xs:element name="id" type="xs:int"/>
      <xs:element name="paid" type="xs:boolean"/>
      <xs:element minOccurs="0" name="paymentDate" type="tns:localDate"/>
      <xs:element minOccurs="0" name="supplier" type="tns:supplier"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType final="extension restriction" name="localDate">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="generateInvoicesForAllSuppliers">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="generateInvoicesForAllSuppliersResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="findAllSuppliers">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="findAllSuppliersResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="supplier" type="tns:supplier"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="findSupplierByName">
    <xs:sequence>
      <xs:element minOccurs="0" name="name" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="findSupplierByNameResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="supplier" type="tns:supplier"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="generateInvoiceFor">
    <xs:sequence>
      <xs:element minOccurs="0" name="supplier" type="tns:supplier"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="generateInvoiceForResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="addSupplierContact">
    <xs:sequence>
      <xs:element minOccurs="0" name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="contact" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addSupplierContactResponse">
    <xs:sequence>
      <xs:element name="return_code" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="findAllUnpaidInvoices">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="findAllUnpaidInvoicesResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="unpaid_list" type="tns:invoice"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="registerSupplier">
    <xs:sequence>
      <xs:element minOccurs="0" name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="contact" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="registerSupplierResponse">
    <xs:sequence>
      <xs:element name="return_code" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="deleteSupplier">
    <xs:sequence>
      <xs:element minOccurs="0" name="name" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="deleteSupplierResponse">
    <xs:sequence>
      <xs:element name="return_code" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="AlreadyExistingSupplierException" type="tns:AlreadyExistingSupplierException"/>
  <xs:complexType name="AlreadyExistingSupplierException">
    <xs:sequence>
      <xs:element name="conflictingName" nillable="true" type="xs:string"/>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>
<xsd:schema xmlns:tns="http://www.polytech.unice.fr/si/4a/isa/dd/team-h/packages" xmlns:xsd="http://www.w3.org/2001/XMLSchema" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://www.polytech.unice.fr/si/4a/isa/dd/team-h/packages">
  <xsd:element name="UnknownSupplierException" type="tns:UnknownSupplierException"/>
  <xsd:complexType name="UnknownSupplierException">
    <xsd:sequence>
      <xsd:element name="name" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="message" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>
<xsd:schema xmlns:tns="http://www.polytech.unice.fr/si/4a/isa/dd/team-h/drones" xmlns:xsd="http://www.w3.org/2001/XMLSchema" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://www.polytech.unice.fr/si/4a/isa/dd/team-h/drones">
  <xsd:element name="AlreadyExistingContactException" type="tns:AlreadyExistingContactException"/>
  <xsd:complexType name="AlreadyExistingContactException">
    <xsd:sequence>
      <xsd:element name="conflictingContact" nillable="true" type="xsd:string"/>
      <xsd:element name="contactName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="message" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>
  </wsdl:types>
  <wsdl:message name="findAllSuppliersResponse">
    <wsdl:part name="parameters" element="tns:findAllSuppliersResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="generateInvoiceForResponse">
    <wsdl:part name="parameters" element="tns:generateInvoiceForResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findInvoicesForSupplierResponse">
    <wsdl:part name="parameters" element="tns:findInvoicesForSupplierResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="generateInvoicesForAllSuppliersResponse">
    <wsdl:part name="parameters" element="tns:generateInvoicesForAllSuppliersResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findSupplierByName">
    <wsdl:part name="parameters" element="tns:findSupplierByName">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="AlreadyExistingContactException">
    <wsdl:part name="AlreadyExistingContactException" element="ns2:AlreadyExistingContactException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteSupplierResponse">
    <wsdl:part name="parameters" element="tns:deleteSupplierResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="registerSupplier">
    <wsdl:part name="parameters" element="tns:registerSupplier">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAllUnpaidInvoicesResponse">
    <wsdl:part name="parameters" element="tns:findAllUnpaidInvoicesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findInvoicesForSupplier">
    <wsdl:part name="parameters" element="tns:findInvoicesForSupplier">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="generateInvoicesForAllSuppliers">
    <wsdl:part name="parameters" element="tns:generateInvoicesForAllSuppliers">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="UnknownSupplierException">
    <wsdl:part name="UnknownSupplierException" element="ns1:UnknownSupplierException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAllSuppliers">
    <wsdl:part name="parameters" element="tns:findAllSuppliers">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addSupplierContactResponse">
    <wsdl:part name="parameters" element="tns:addSupplierContactResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="AlreadyExistingSupplierException">
    <wsdl:part name="AlreadyExistingSupplierException" element="tns:AlreadyExistingSupplierException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="generateInvoiceFor">
    <wsdl:part name="parameters" element="tns:generateInvoiceFor">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findSupplierByNameResponse">
    <wsdl:part name="parameters" element="tns:findSupplierByNameResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addSupplierContact">
    <wsdl:part name="parameters" element="tns:addSupplierContact">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAllUnpaidInvoices">
    <wsdl:part name="parameters" element="tns:findAllUnpaidInvoices">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="registerSupplierResponse">
    <wsdl:part name="parameters" element="tns:registerSupplierResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteSupplier">
    <wsdl:part name="parameters" element="tns:deleteSupplier">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="AccountingWebService">
    <wsdl:operation name="findInvoicesForSupplier">
      <wsdl:input name="findInvoicesForSupplier" message="tns:findInvoicesForSupplier">
    </wsdl:input>
      <wsdl:output name="findInvoicesForSupplierResponse" message="tns:findInvoicesForSupplierResponse">
    </wsdl:output>
      <wsdl:fault name="UnknownSupplierException" message="tns:UnknownSupplierException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="generateInvoicesForAllSuppliers">
      <wsdl:input name="generateInvoicesForAllSuppliers" message="tns:generateInvoicesForAllSuppliers">
    </wsdl:input>
      <wsdl:output name="generateInvoicesForAllSuppliersResponse" message="tns:generateInvoicesForAllSuppliersResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAllSuppliers">
      <wsdl:input name="findAllSuppliers" message="tns:findAllSuppliers">
    </wsdl:input>
      <wsdl:output name="findAllSuppliersResponse" message="tns:findAllSuppliersResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findSupplierByName">
      <wsdl:input name="findSupplierByName" message="tns:findSupplierByName">
    </wsdl:input>
      <wsdl:output name="findSupplierByNameResponse" message="tns:findSupplierByNameResponse">
    </wsdl:output>
      <wsdl:fault name="UnknownSupplierException" message="tns:UnknownSupplierException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="generateInvoiceFor">
      <wsdl:input name="generateInvoiceFor" message="tns:generateInvoiceFor">
    </wsdl:input>
      <wsdl:output name="generateInvoiceForResponse" message="tns:generateInvoiceForResponse">
    </wsdl:output>
      <wsdl:fault name="UnknownSupplierException" message="tns:UnknownSupplierException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addSupplierContact">
      <wsdl:input name="addSupplierContact" message="tns:addSupplierContact">
    </wsdl:input>
      <wsdl:output name="addSupplierContactResponse" message="tns:addSupplierContactResponse">
    </wsdl:output>
      <wsdl:fault name="UnknownSupplierException" message="tns:UnknownSupplierException">
    </wsdl:fault>
      <wsdl:fault name="AlreadyExistingContactException" message="tns:AlreadyExistingContactException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAllUnpaidInvoices">
      <wsdl:input name="findAllUnpaidInvoices" message="tns:findAllUnpaidInvoices">
    </wsdl:input>
      <wsdl:output name="findAllUnpaidInvoicesResponse" message="tns:findAllUnpaidInvoicesResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="registerSupplier">
      <wsdl:input name="registerSupplier" message="tns:registerSupplier">
    </wsdl:input>
      <wsdl:output name="registerSupplierResponse" message="tns:registerSupplierResponse">
    </wsdl:output>
      <wsdl:fault name="AlreadyExistingSupplierException" message="tns:AlreadyExistingSupplierException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteSupplier">
      <wsdl:input name="deleteSupplier" message="tns:deleteSupplier">
    </wsdl:input>
      <wsdl:output name="deleteSupplierResponse" message="tns:deleteSupplierResponse">
    </wsdl:output>
      <wsdl:fault name="UnknownSupplierException" message="tns:UnknownSupplierException">
    </wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="AccountingWebServiceImplServiceSoapBinding" type="tns:AccountingWebService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="findInvoicesForSupplier">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findInvoicesForSupplier">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findInvoicesForSupplierResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UnknownSupplierException">
        <soap:fault name="UnknownSupplierException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="generateInvoicesForAllSuppliers">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="generateInvoicesForAllSuppliers">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="generateInvoicesForAllSuppliersResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAllSuppliers">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findAllSuppliers">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findAllSuppliersResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findSupplierByName">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findSupplierByName">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findSupplierByNameResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UnknownSupplierException">
        <soap:fault name="UnknownSupplierException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="generateInvoiceFor">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="generateInvoiceFor">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="generateInvoiceForResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UnknownSupplierException">
        <soap:fault name="UnknownSupplierException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addSupplierContact">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addSupplierContact">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addSupplierContactResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UnknownSupplierException">
        <soap:fault name="UnknownSupplierException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistingContactException">
        <soap:fault name="AlreadyExistingContactException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAllUnpaidInvoices">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findAllUnpaidInvoices">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findAllUnpaidInvoicesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="registerSupplier">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="registerSupplier">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="registerSupplierResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="AlreadyExistingSupplierException">
        <soap:fault name="AlreadyExistingSupplierException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteSupplier">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteSupplier">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteSupplierResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UnknownSupplierException">
        <soap:fault name="UnknownSupplierException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="AccountingWebServiceImplService">
    <wsdl:port name="AccountingWebServiceImplPort" binding="tns:AccountingWebServiceImplServiceSoapBinding">
      <soap:address location="http://localhost:9090/AccountingWebServiceImplPort"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
